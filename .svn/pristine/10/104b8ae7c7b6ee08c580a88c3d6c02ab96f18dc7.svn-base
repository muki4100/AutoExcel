using AutoExcel.Core;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Text;
using System.Windows.Forms;

namespace AutoExcel
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnHelloWorld_Click(object sender, EventArgs e)
        {
            try
            {
                ExcelBinder excelbinder = new ExcelBinder();
                excelbinder.NewDocument();

                excelbinder.Visible = true;

                excelbinder.SetValue("A1", "Hello world");

                excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testhello1.xlsx"));

                excelbinder.CloseDocument();

                excelbinder.QuitDocument();
            }
            catch (Exception excel)
            {
                MessageBox.Show(excel.Message.ToString());
            }
        }

        private void btnInsertImage_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.NewDocument();

            excelbinder.Visible = true;

            excelbinder.InsertImage(Path.Combine(Environment.CurrentDirectory, "tent1.jpg"), 1, 1, 200, 200);

            excelbinder.InsertImage(Path.Combine(Environment.CurrentDirectory, "tent1.jpg"), 200, 200);

            excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testimage.xlsx"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();
        }

        private void btnFillColor_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.NewDocument();

            excelbinder.Visible = true;

            excelbinder.SetColor("A1:B2", (int)enumRgbColor.rgbRed);
            excelbinder.SetColor("A2", (int)enumRgbColor.rgbBlue);
            excelbinder.SetColor("A3", (int)enumRgbColor.rgbGreen);

            excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testcolor.xlsx"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();
        }

        private void btnnewSheet_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.NewDocument();

            excelbinder.Visible = true;

            excelbinder.AddNewSheet("Test1");
            excelbinder.SetValue("A1", "test1");

            excelbinder.AddNewSheet("Test2");
            excelbinder.SetValue("A1", "test2");

            excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testnewsheet.xlsx"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();
        }


        private void btnRenameSheet_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.OpenDocument(Path.Combine(Environment.CurrentDirectory, "testnewsheet.xlsx"));
            
            excelbinder.Visible = true;

            excelbinder.RenameSheet(4, "RenameTest1");

            excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testnewsheet.xlsx"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();
        }


        private void btnCopySheet_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.NewDocument();
            
            excelbinder.Visible = true;

            excelbinder.RenameSheet(3, "RenameTest1");
            excelbinder.SetActiveWorkSheet(3);
            excelbinder.SetValue("A1", "Renamed Test Sheet");

            excelbinder.sheetCopy("RenameTest1", "CopyedTest2");
            excelbinder.SetActiveWorkSheet("CopyedTest2");
            excelbinder.SetValue("A1", "Copyed Test Sheet");

            excelbinder.SaveAsDocument(Path.Combine(Environment.CurrentDirectory, "testcopyheet.xls"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();
        }


        private void btnnewChart_Click(object sender, EventArgs e)
        {
            ExcelBinder excelbinder = new ExcelBinder();
            excelbinder.NewDocument();

            excelbinder.Visible = true;

            excelbinder.SetActiveWorkSheet(1);

            excelbinder.SetValue(1, 2, "Student1");
            excelbinder.SetValue(1, 3, "Student2");
            excelbinder.SetValue(1, 4, "Student3");

            excelbinder.SetValue(2, 1, "Term1");
            excelbinder.SetValue(2, 2, "80");
            excelbinder.SetValue(2, 3, "65");
            excelbinder.SetValue(2, 4, "45");

            excelbinder.SetValue(3, 1, "Term2");
            excelbinder.SetValue(3, 2, "78");
            excelbinder.SetValue(3, 3, "72");
            excelbinder.SetValue(3, 4, "60");

            excelbinder.SetValue(4, 1, "Term3");
            excelbinder.SetValue(4, 2, "82");
            excelbinder.SetValue(4, 3, "80");
            excelbinder.SetValue(4, 4, "65");

            excelbinder.SetValue(5, 1, "Term4");
            excelbinder.SetValue(5, 2, "75");
            excelbinder.SetValue(5, 3, "82");
            excelbinder.SetValue(5, 4, "68");

            excelbinder.CreateChart(1, 1, 5, 4, 100, 100, 400, 400, ExcelBinder.ExlChartType.xlBubble);
            
            excelbinder.SaveDocument(Path.Combine(Environment.CurrentDirectory, "testchart1.xlsx"));

            excelbinder.CloseDocument();

            excelbinder.QuitDocument();

        }


        

    }
}
